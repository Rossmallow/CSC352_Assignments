-- Ross Nelson CSC352 Assignment 5
-- March 2nd 2020

-- 1.
DECLARE
    TYPE EMP_FULL_NAME IS RECORD (
        EMPLOYEE_ID     INTEGER,
        LAST_NAME       VARCHAR2(25),
        FIRST_NAME      VARCHAR2(25));
    EMPLOYEE EMP_FULL_NAME;
    
BEGIN
    SELECT EMPLOYEE_ID, LAST_NAME, FIRST_NAME
    INTO EMPLOYEE.EMPLOYEE_ID, EMPLOYEE.FIRST_NAME, EMPLOYEE.LAST_NAME
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = 110;
    
    DBMS_OUTPUT.PUT_LINE('Employee ID: ' || EMPLOYEE.EMPLOYEE_ID || ' Name: ' ||
                         EMPLOYEE.FIRST_NAME || ' ' || EMPLOYEE.LAST_NAME);
END;
/

-- 2.
--Drops table PHONEBOOK so the script can be run again without error
DROP TABLE PHONEBOOK;
    
CREATE TABLE PHONEBOOK (
    AREACODE    VARCHAR2(3),
    PREFIX      VARCHAR2(3),
    NUM         VARCHAR2(4));

DECLARE
    TYPE PHONE_NUM IS RECORD (
        AREACODE    VARCHAR2(3),
        PREFIX      VARCHAR2(3),
        NUM         VARCHAR2(4));
    P_NUM PHONE_NUM;
        
    CURSOR C_PHONE IS
        SELECT PHONE_NUMBER
        FROM EMPLOYEES
        WHERE DEPARTMENT_ID = 20 OR DEPARTMENT_ID = 80 OR DEPARTMENT_ID = 90;
    
    A_CODE EMPLOYEES.PHONE_NUMBER%TYPE;
BEGIN
    FOR P_NUMBER IN C_PHONE LOOP
        A_CODE := SUBSTR(P_NUMBER.PHONE_NUMBER, 1, 3);
        IF (A_CODE != 011) THEN
            P_NUM.AREACODE := A_CODE;
            P_NUM.PREFIX := SUBSTR(P_NUMBER.PHONE_NUMBER, 5, 3);
            P_NUM.NUM := SUBSTR(P_NUMBER.PHONE_NUMBER, 9, 4);
            
            INSERT INTO PHONEBOOK VALUES P_NUM;
        END IF;
    END LOOP;
END;
/

SELECT * FROM PHONEBOOK;

-- 3.
DECLARE
    CURSOR EMPCURTYP20 RETURN EMP%ROWTYPE IS
        SELECT EMP.*
        FROM EMP
        WHERE DEPTNO = 20
        ORDER BY ENAME;
        
    CURSOR EMPCURTYP10 RETURN EMP%ROWTYPE IS
        SELECT EMP.*
        FROM EMP
        WHERE DEPTNO = 10
        ORDER BY ENAME;
        
    EMPLOYEE EMP%ROWTYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('Department 20:');
    OPEN EMPCURTYP20;
    FOR I IN 1 .. 5 LOOP
        FETCH EMPCURTYP20 INTO EMPLOYEE;
        DBMS_OUTPUT.PUT_LINE(CHR(9) || 'Name: ' || EMPLOYEE.ENAME || ' Job Title: ' || EMPLOYEE.JOB);
    END LOOP;
    CLOSE EMPCURTYP20;
    
    DBMS_OUTPUT.PUT_LINE('------------------------------------');
    
    DBMS_OUTPUT.PUT_LINE('Department 10:');
    OPEN EMPCURTYP10;
    FOR I IN 1 .. 3 LOOP
        FETCH EMPCURTYP10 INTO EMPLOYEE;
        DBMS_OUTPUT.PUT_LINE(CHR(9) || 'Name: ' || EMPLOYEE.ENAME || ' Job Title: ' || EMPLOYEE.JOB);
    END LOOP;
    CLOSE EMPCURTYP10;
END;
/

-- 4.
DECLARE
    EMPLOYEE    EMPLOYEES%ROWTYPE;
    LAST_NAME   EMPLOYEES.LAST_NAME%TYPE;
    FIRST_NAME  EMPLOYEES.FIRST_NAME%TYPE;
    SALARY      EMPLOYEES.SALARY%TYPE;

PROCEDURE P4(E_ID IN EMPLOYEES.EMPLOYEE_ID%TYPE,
             L_NAME OUT EMPLOYEES.LAST_NAME%TYPE,
             F_NAME OUT EMPLOYEES.FIRST_NAME%TYPE,
             SAL OUT EMPLOYEES.SALARY%TYPE) IS
BEGIN
    SELECT * INTO EMPLOYEE
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = E_ID;
    
    L_NAME := EMPLOYEE.LAST_NAME;
    F_NAME := EMPLOYEE.FIRST_NAME;
    SAL := EMPLOYEE.SALARY;
END;

BEGIN
    P4(116, LAST_NAME, FIRST_NAME, SALARY);
    DBMS_OUTPUT.PUT_LINE('Name: ' || FIRST_NAME || ' ' || LAST_NAME || ' Salary: ' || SALARY); 
END;
/

-- 5.
DECLARE
    CURSOR C_EMP IS
        SELECT EMPLOYEE_ID
        FROM EMPLOYEES
        WHERE DEPARTMENT_ID = 30;

    EMPLOYEE    EMPLOYEES%ROWTYPE;
    LAST_NAME   EMPLOYEES.LAST_NAME%TYPE;
    FIRST_NAME  EMPLOYEES.FIRST_NAME%TYPE;
    SALARY      EMPLOYEES.SALARY%TYPE;
    
PROCEDURE P4(E_ID IN EMPLOYEES.EMPLOYEE_ID%TYPE,
             L_NAME OUT EMPLOYEES.LAST_NAME%TYPE,
             F_NAME OUT EMPLOYEES.FIRST_NAME%TYPE,
             SAL OUT EMPLOYEES.SALARY%TYPE) IS
BEGIN
    SELECT * INTO EMPLOYEE
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = E_ID;
    
    L_NAME := EMPLOYEE.LAST_NAME;
    F_NAME := EMPLOYEE.FIRST_NAME;
    SAL := EMPLOYEE.SALARY;
END;

BEGIN
    FOR E IN C_EMP LOOP
        P4(E.EMPLOYEE_ID, LAST_NAME, FIRST_NAME, SALARY);
        DBMS_OUTPUT.PUT_LINE('Name: ' || FIRST_NAME || ' ' || LAST_NAME ||
                             CHR(9) || CHR(9) || 'Salary: ' || SALARY);
    END LOOP;
END;
/

-- Q_Extra_a.
--Drops table PHONEBOOK so the script can be run again without error
DROP TABLE PHONEBOOK;
    
CREATE TABLE PHONEBOOK (
    AREACODE    VARCHAR2(3),
    PREFIX      VARCHAR2(3),
    NUM         VARCHAR2(4));

DECLARE
    TYPE PHONE_NUM IS RECORD (
        AREACODE    VARCHAR2(3),
        PREFIX      VARCHAR2(3),
        NUM         VARCHAR2(4));
    P_NUM PHONE_NUM;
        
    CURSOR C_PHONE IS
        SELECT PHONE_NUMBER
        FROM EMPLOYEES
        WHERE DEPARTMENT_ID = 20 OR DEPARTMENT_ID = 80 OR DEPARTMENT_ID = 90;
        
    TYPE PHONE_ARRAY
        IS TABLE OF PHONE_NUM
        INDEX BY BINARY_INTEGER;
    PHONE_VARIABLE PHONE_ARRAY;
    
    A_CODE EMPLOYEES.PHONE_NUMBER%TYPE;
    I NUMBER(2) := 1;
    
BEGIN
    FOR P_NUMBER IN C_PHONE LOOP
        A_CODE := SUBSTR(P_NUMBER.PHONE_NUMBER, 1, 3);
        IF (A_CODE != 011) THEN
            P_NUM.AREACODE := A_CODE;
            P_NUM.PREFIX := SUBSTR(P_NUMBER.PHONE_NUMBER, 5, 3);
            P_NUM.NUM := SUBSTR(P_NUMBER.PHONE_NUMBER, 9, 4);
            
           PHONE_VARIABLE(I) := P_NUM;
           I := I + 1;
        END IF;
    END LOOP;
    
    I := 1;
    WHILE I IS NOT NULL LOOP
        DBMS_OUTPUT.PUT_LINE('(' || PHONE_VARIABLE(I).AREACODE || ') ' ||
                             PHONE_VARIABLE(I).PREFIX || '-' || PHONE_VARIABLE(I).NUM);
        I := PHONE_VARIABLE.NEXT(I);
    END LOOP;
END;
/

-- Q_Extra_b.
--Drops table PHONEBOOK so the script can be run again without error
DROP TABLE PHONEBOOK;
    
CREATE TABLE PHONEBOOK (
    AREACODE    VARCHAR2(3),
    PREFIX      VARCHAR2(3),
    NUM         VARCHAR2(4));

DECLARE
    TYPE PHONE_NUM IS RECORD (
        AREACODE    VARCHAR2(3),
        PREFIX      VARCHAR2(3),
        NUM         VARCHAR2(4));
    P_NUM PHONE_NUM;
        
    CURSOR C_PHONE IS
        SELECT PHONE_NUMBER
        FROM EMPLOYEES
        WHERE DEPARTMENT_ID = 20 OR DEPARTMENT_ID = 80 OR DEPARTMENT_ID = 90;
        
    TYPE PHONE_TABLE
        IS TABLE OF PHONE_NUM;
    PHONE_VARIABLE PHONE_TABLE;
    
    A_CODE EMPLOYEES.PHONE_NUMBER%TYPE;
    LEN NUMBER(2);
    I NUMBER(2) := 1;
    
BEGIN
    PHONE_VARIABLE := PHONE_TABLE();
    
    FOR P_NUMBER IN C_PHONE LOOP
        A_CODE := SUBSTR(P_NUMBER.PHONE_NUMBER, 1, 3);
        IF (A_CODE != 011) THEN
            P_NUM.AREACODE := A_CODE;
            P_NUM.PREFIX := SUBSTR(P_NUMBER.PHONE_NUMBER, 5, 3);
            P_NUM.NUM := SUBSTR(P_NUMBER.PHONE_NUMBER, 9, 4);
            
           PHONE_VARIABLE.EXTEND;
           PHONE_VARIABLE(PHONE_VARIABLE.LAST) := P_NUM;
        END IF;
    END LOOP;
    
    LEN := PHONE_VARIABLE.COUNT;
    WHILE I <= LEN LOOP
        IF PHONE_VARIABLE.EXISTS(I) THEN
            DBMS_OUTPUT.PUT_LINE('(' || PHONE_VARIABLE(I).AREACODE || ') ' ||
                                 PHONE_VARIABLE(I).PREFIX || '-' || PHONE_VARIABLE(I).NUM);
        END IF;
        I := I + 1;
    END LOOP;
END;
/